<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Certification | Eduard Luhtonen]]></title>
  <link href="http://luhtonen.github.com/blog/categories/certification/atom.xml" rel="self"/>
  <link href="http://luhtonen.github.com/"/>
  <updated>2013-03-14T15:54:48+02:00</updated>
  <id>http://luhtonen.github.com/</id>
  <author>
    <name><![CDATA[Eduard Luhtonen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How make Java to trust self signed certificate]]></title>
    <link href="http://luhtonen.github.com/blog/2013/03/14/how-make-java-to-trust-self-signed-certificate/"/>
    <updated>2013-03-14T15:24:00+02:00</updated>
    <id>http://luhtonen.github.com/blog/2013/03/14/how-make-java-to-trust-self-signed-certificate</id>
    <content type="html"><![CDATA[<p>We've been doing update to our customers systems and one of the part what was update Java to new version. With the update we've lost our <em>cacerts</em> file. In result Java stopped to trust our self signed certificate: <code>The certificate issued by &lt;..&gt; is not trusted;</code></p>

<p>To resolve this issue, we needed to add self signed certifate to Java's trusted certificate list.</p>

<pre>
> sudo su -
> cd <i>install_directory</i>
> mkdir certs
> openssl s_client -connect <i>remote_host</i>:<i>remote_port</i> 2>&1 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > certs/certfile.txt
> cp java/jre/lib/security/cacerts java/jre/lib/security/cacerts-`date -u +"%Y%m%d"`
> java/jre/bin/keytool -import -noprompt -trustcacerts -alias "mycert" -file certs/certfile.txt -keystore java/jre/lib/security/cacerts -storepass changeit
</pre>


<h4>Explanations</h4>

<ol>
<li>Since we have our tool installed as <em>root</em>, we need to <em>sudo</em> as <em>root</em></li>
<li>Change to tool installation directory, replace <em>install_directory</em> with correct value. Java was installed under it in <em>java</em> subdirectory.</li>
<li>Create directory to store certificate to be downloaded from  remote host</li>
<li>Download certificate from remote host and store it in <em>certs</em> directory in <em>certfile.txt</em> file. <em>remote_host</em> need to be replaced with correct host name or ip addres and <em>remote_port</em> need to be replaced with correct port.</li>
<li>Make backup of <em>cacerts</em> file</li>
<li>Add self signed certificate to <em>cacerts</em> file. Here's some important options:</li>
<li><em>-noprompt</em> - suppress interactive prompting</li>
<li><em>-trustcerts</em> - set certificate trust attribute to yes and don't ask from user</li>
<li><em>-alias "alias_name"</em> - is alias used by keytool to find certificate from the list, if alias is already in the list certificate value is replace, otherwise new certificate is added to the <em>cacerts</em> file</li>
<li><em>-storepass pass</em> - password for key store, <em>changeit</em> is default</li>
</ol>

]]></content>
  </entry>
  
</feed>
